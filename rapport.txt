Bugs :
- Quand on veut ajouter un item : "Uncaught TypeError: self.addItem is not a function"
--> dans "controller.js" ligne 95 : "Controller.prototype.adddItem = function (title) { "
Résolution: un "d" en trop

- Génere un nouvel ID : la méthode utilisée pouvait éventuellement mettre en conflit 2 Id identiques et donc faire bugger l'appli
--> changement de méthode : utilisation de Date.now() qui est le nombre de miliseconds écoulées depuis le 1er janvier 1970


Amélioration : 
- Dans le controller, dans la function "removeItem", le forEach est inutile, le console.log peut très bien se mettre lors du render
- Ajout " aria-label="new-todo" " dans l'input "new-todo" du html
- Ajout <meta name="viewport" content="width=device-width, initial-scale=1.0">
- Ajout <meta name="Description" content="It is a todolist app that help to manage our tasks">


Tests : (avec Jasmine)


Audit :
Faite grâce au rapport générer dans DevTools de Chrome. Il y a 4 parties :
- Performance
- Accessibility
- Best practices
- SEO
Avec chacun un score :
- 0 to 49 (rouge): Mauvais
- 50 to 89 (orange): Besoin d'amélioration
- 90 to 100 (vert): Bon


todolistme :
Le site todolistme.net a plus de fonctionnalités que notre site. 
Possibilité de : 
- Faire plusieurs todolist,
- Enregistrer une tache à faire "Demain" ou "Plus tard",
- Trier les taches selon leur date de création, de manière alphabétique, aléatoire, afficher le top 3,
- Imprimer la todolist.


La performance de ce site est indiqué comme mauvais (43/100, source le rapport de Lighthouse des devtools de Chrome).
Le contenu principal de la page est visible rapidement.
Mais les points suivants sont à améliorer :
- La vitesse de visibilité des contenus de la page (6.7s)
- Le délai à partir duquel le fil d'execution est suffisamment disponible pour gérer les entrées (12.0s)
- Le délai à partir duquel la page sera pleinement interactive (13.0s)
- Les lags (retard sur l'interaction) peuvent être importants
Améliorations :
- Le format d'image comme JPEG 2000, JPEG XR, and WebP devrait être utilisée plutôt que PNG or JPEG, pour un téléchargement d'image plus rapide (meilleur compression), notamment sur le background.
- Il est conseillé de minifier les fichiers javascript (jQuery). En effet, seulement 27% de la librairie JQuery est utilisé.

L'accessibilité de ce site est indiqué comme mauvais (38/100).
- Les couleurs du background et du foreground n'ont pas un contraste suffisamment important.
- Les attribues Id devrait être unique.
- il est préférable d'utiliser des "alt" dans les balises images et des labels dans les formulaires.
- il n'y a pas de language indiqué dans le html

Les bonnes pratiques sont notées 57/100, donc devraient être améliorées :
- utiliser https au lieu de http, permet une meilleure sécurité
- utiliser des écouteurs d'évènements passifs

Le SEO est noté 78/100, donc devrait aussi être amélioré :
- Ajouter un '<meta name="viewport">'

En terme de Progressive web app, le chargement se fait trop lentement et l'interaction se fait après plus de 10s.
Les notations sur mobile sont similaires.

Conclusion : 
Cette application est lente et demanderait à être optimisée sur plusieurs point. L'expérience utilisateur pourrait aussi être améliorées (on met du temps à comprendre comment ajouter une todolist et où sont les todolist enregistrées.)